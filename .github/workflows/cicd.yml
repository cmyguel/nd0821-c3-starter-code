# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CICD

on:
  # run manually
  workflow_dispatch:
  #push:
    branches: [ master ]
    
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: "3.8"

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: us-east-1
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    
    - name: set up DVC
      uses: iterative/setup-dvc@v1
    
    - name: pull DVC
      run: |
        dvc pull

    - name: See conda env path
      run: conda env list

    - name: Set cache date
      run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

    # cache environment
    - uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: $pip-{{ hashFiles('requirements_cicd.txt') }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}
      id: cache_pip

    - name: Install dependencies
      run: |
        echo "Upgrading pip"
        python -m pip install --upgrade pip
        echo "Installing flake8, pytest"
        pip install flake8 pytest
        # echo "conda installing requirements.txt"
        # $CONDA/bin/conda install --file requirements.txt -c conda-forge
        echo "Install requirements_cicd.txt"
        pip install -r requirements_cicd.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        # move to proper folder, and run tests
        cd starter
        pytest
